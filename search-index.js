var searchIndex = {};
searchIndex['com_rs'] = {"items":[[0,"","com_rs","# com-rs 0.1.4\nRust bindings for the Win32 [Component Object Model]\n(https://msdn.microsoft.com/en-us/library/ms680573.aspx).",null,null],[3,"ComPtr","","Wrapper type for COM interface pointers.",null,null],[3,"IUnknown","","Base interface for all COM types.",null,null],[3,"IID","","Interface identifier.",null,null],[12,"data1","","First component, 32-bit value.",0,null],[12,"data2","","Second component, 16-bit value.",0,null],[12,"data3","","Third component, 16-bit value.",0,null],[12,"data4","","Fourth component, array of 8-bit values.",0,null],[11,"fmt","","",1,{"inputs":[{"name":"comptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `ComPtr<T>`.",1,{"inputs":[{"name":"comptr"}],"output":{"name":"comptr"}}],[11,"as_ptr","","Returns the raw pointer as type `U`. Depends on the `AsComPtr` trait.",1,null],[11,"as_mut_ptr","","Returns a mutable reference to the raw pointer.\nDepends on the 'AsComPtr' trait.",1,null],[11,"is_null","","Returns true if the contained interface pointer is null. This should\nalways be checked before calling any methods on the contained interface.",1,{"inputs":[{"name":"comptr"}],"output":{"name":"bool"}}],[11,"iid","","Return the IID associated with type `T`.",1,{"inputs":[{"name":"comptr"}],"output":{"name":"iid"}}],[11,"from","","Create a `ComPtr` of a different interface type `U`. Calls\n`IUnknown::query_interface` and returns a new `ComPtr<U>` object.\nIf the requested interface is unavailable, the returned `ComPtr<U>`\nwill contain a null pointer.",1,{"inputs":[{"name":"comptr"},{"name":"comptr"}],"output":{"name":"comptr"}}],[11,"deref","","Dereference into contained interface `T` to call methods directly.",1,{"inputs":[{"name":"comptr"}],"output":{"name":"t"}}],[11,"clone","","Clones the `ComPtr<T>`. Increments the internal reference counter by\ncalling `IUnknown::add_ref` on the contained COM object\n(if the pointer is non-null).",1,{"inputs":[{"name":"comptr"}],"output":{"name":"comptr"}}],[11,"drop","","Drops the `ComPtr<T>`. Decrements the internal reference counter by\ncalling `IUnknown::release` on the contained COM object\n(if the pointer is non-null).",1,{"inputs":[{"name":"comptr"}],"output":null}],[11,"fmt","","",2,{"inputs":[{"name":"iunknown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"query_interface","","Retrieves pointers to the supported interfaces on an object.\nUse [`ComPtr::from`](struct.ComPtr.html#method.from) instead.",2,null],[11,"add_ref","","Increments the reference count for an interface on an object.\nShould never need to call this directly.",2,{"inputs":[{"name":"iunknown"}],"output":{"name":"u32"}}],[11,"release","","Decrements the reference count for an interface on an object.\nShould never need to call this directly.",2,{"inputs":[{"name":"iunknown"}],"output":{"name":"u32"}}],[11,"iid","","",2,{"inputs":[{"name":"iunknown"}],"output":{"name":"iid"}}],[6,"HResult","","Result type.",null,null],[8,"AsComPtr","","Helper trait for `ComPtr`. Defines which types of raw pointer can be\nreturned by `as_ptr`/`as_mut_ptr`.",null,null],[8,"ComInterface","","Helper trait for `ComPtr`. Implemented automatically by the\n`com_interface!` macro.",null,null],[10,"iid","","Get the IID associated with a COM interface struct.",3,{"inputs":[{"name":"cominterface"}],"output":{"name":"iid"}}],[11,"eq","","",0,{"inputs":[{"name":"iid"},{"name":"iid"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"iid"},{"name":"iid"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"iid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"iid"}],"output":{"name":"iid"}}],[11,"fmt","","",0,{"inputs":[{"name":"iid"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"com_interface!","","Macro for generating COM interface definitions.",null,null],[14,"iid!","","Helper macro for defining [`IID`](struct.IID.html) constants.",null,null]],"paths":[[3,"IID"],[3,"ComPtr"],[3,"IUnknown"],[8,"ComInterface"]]};
initSearch(searchIndex);
